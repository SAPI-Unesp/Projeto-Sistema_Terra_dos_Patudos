<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADvCAYAAAAEubMKAAAABGdBTUEAALGPC/xhBQAAB+hJREFUeF7t
        3EFuHEcWRVEvTbOeeDG9BC+td+bOK5DElxgyugHWLyp5AjiQFCSgGtwHVoq0/7jOX5f/wBfw17/+/ecf
        n02nF/c3fAH/OY3g2TpGyFdhhPBkv80Iv793hht41/ZpBM/W+fmFfsqHV/h/1fLoOkYIm2p5dB0jhE21
        PLqOEcKmWh5dxwhhUy2PrmOEsKmWR9cxQthUy6PrGCFsquXRdYwQNtXy6DpGCJtqeXQdI4RNtTy6jhHC
        ploeXccIYVMtj65jhLCplkfXMULYVMuj6xghbKrl0XWMEDbV8ug6Rgibanl0HSOETbU8uo4RwqZaHl3H
        CGFTLY+uY4SwqZZH1zFC2FTLo+sYIWyq5dF1jBA21fLoOkYIm2p5dB0jhE21PLqOEcKmWh5dxwhhUy2P
        rmOEsKmWR9cxQthUy6PrGCFsquXRdYwQNtXy6DpGCJtqeXQdI4RNtTy6jhHCploeXccIYVMtj65jhLCp
        lkfXMULYVMuj6xghbKrl0XWMEDbV8ug6Rgibanl0HSOETbU8uo4RwqZaHl3HCGFTLY+uY4SwqZZH1zFC
        2FTLo+sYIWyq5dF1jBA21fLoOkYIm2p5dB0jhE21PLqOEcKmWh5dxwhhUy2PrmOEsKmWR9cxQthUy6Pr
        GCFsquXRdYwQNtXy6DpGCJtqeXQdI4RNtTy6jhHCploeXccIYVMtj65jhLCplkfXMULYVMuj6xghbKrl
        0XWMEDbV8ug6Rgibanl0HSOETbU8uo4RwqZaHl3HCGFTLY+uY4SwqZZH1zFC2FTLo+sYIWyq5dF1jBA2
        1fLoOkYIm2p5dB0jhE21PLqOEcKmWh5d5+kjvM63S68rr9szQu6plkfXedoIr9P45mt5e00XI+Seanl0
        nU/xdvQ683X1eyPknmp5dJ3POMK+Qhoh91TLo+t8lhG+be7lz0bIPdXy6DqfZYQ/vJ6OEXJLtTy6ztNH
        eJ35DzTfXu6MkHuq5dF1PsMI317TuDNC7qmWR9f5DCN83dvba5mXr4yQW6jl0XWeOsLrzLeibzvrGCG3
        VMuj6zx7hPP1fH8efLk3Qu6plkfXefYI37b2070Rck+1PLrOs0d4fB0dI+SWanl0naeN8DrH58GXjxkh
        91TLo+s8c4TH58GXjxkh91TLo+s8c4TH58GXjxkh91TLo+s8c4S/fA0dI+SWanl0naeM8Dq/fCv68nEj
        5J5qeXSdZ43wl29FXz5uhNxTLY+u86wR/uPf3zFCbqmWR9dZH+F1fvmtifE5Rsg91fLoOs8Y4T8+D758
        jhFyT7U8us4zRvjuefA6fXX0s6PcXy2PrvOMEb77u/v9xQi5v1oeXWd1hNd59zzYrxc/McPXUMuj62yP
        cP797ezdAF8+zwi5p1oeXeeZXwl/eAv60+cZIfdUy6PrrD8T/i86Rsgt1fLoOkYIm2p5dB0jhE21PLqO
        EcKmWh5dxwhhUy2PrmOEsKmWR9cxQthUy6PrGCFsquXRdYwQNtXy6DpGCJtqeXQdI4RNtTy6jhHCploe
        XccIYVMtj65jhLCplkfXMULYVMuj6xghbKrl0XWMEDbV8ug6Rgibanl0HSOETbU8uo4RwqZaHl3HCGFT
        LY+uY4SwqZZH1zFC2FTLo+sYIWyq5dF1jBA21fLoOkYIm2p5dB0jhE21PLqOEcKmWh5dxwhhUy2PrmOE
        sKmWR9cxQthUy6PrGCFsquXRdYwQNtXy6DpGCJtqeXQdI4RNtTy6jhHCploeXccIYVMtj65jhLCplkfX
        MULYVMuj6xghbKrl0XWMEDbV8ug6Rgibanl0HSOETbU8uo4RwqZaHl3HCGFTLY+uY4SwqZZH1zFC2FTL
        o+sYIWyq5dF1jBA21fLoOkYIm2p5dB0jhE21PLqOEcKmWh5dxwhhUy2PrmOEsKmWR9cxQthUy6PrGCFs
        quXRdYwQNtXy6DpGCJtqeXQdI4RNtTy6jhHCploeXccIYVMtj65jhLCplkfXMULYVMuj6xghbKrl0XWM
        EDbV8ug6Rgibanl0HSOETbU8uo4RwqZaHl3HCGFTLY+uY4SwqZZH1zFC2FTLo+sYIWyq5dF1jBA21fLo
        OkYIm2p5dB0jhE21PLrObzPC/tyLh9/du7ZPI3i2zs8vFO7KCOHJjBCe7NOO8PW9M9zdp/xHx+MlsOd4
        Cew5XgJ7jpfAnuMlsOd4Cew5XgJ7jpfAnuMlsOd4Cew5XgJ7jpfAnuMlj3Wdb/0w8Yt+sPjv0+fxNRwv
        eYzrNL7f5j+xYcfxkse7Tl8FX0fo/+vzhR0vebyfRvjt9Dl8DcdLHu86358Fc/o4X8fxksd7HeDF8+AX
        d7zksa4z/4HGW9Ev7njJY13n7Xnw9HG+luMlj3Wd1+dBb0Uxwm3XmW9FfWsCI9zW8MYIPQ9ihNuu41sT
        /OB4yeO8DvDieZDvjpc8xnU8D/LO8ZLHaHhjhJ4H+e54yWNcx/Mg7xwveYzXAV48D/LmeMnHu463ohwd
        L/l41/FWlKPjJR/vdYAXb0X5wfGSj3Ud35rgl46XfKyGN0boeZAfHC/5WNd59zx4nb46GiRGuKHxvXh7
        Huz3FyPECB+toV1eR/j9ebBfLwbId8dLPs7L4N6+Er782QB5c7zk4zS4yxyhAfKD4yWw53gJ7DleAnuO
        l8Ce4yWw53gJ7DleAnuOl8Ce4yWw53gJ7DleAnuOl8CWP//4L4wVAoh7TfMcAAAAAElFTkSuQmCC
</value>
  </data>
</root>